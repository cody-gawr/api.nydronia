version: "3"

######### Services ###################################

services:
    # Server container
    nginx:
        build:
            context: docker/nginx
            dockerfile: Dockerfile
        volumes:
            - ./:/var/www
            - ./docker/nginx/logs:/var/log/nginx
        ports:
            # Laravel port
            - 80:80
        depends_on:
            - php

    # PHP FastCGI Process Manager container
    php:
        image: nydronia-www
        build:
            context: docker/php
            dockerfile: Dockerfile
        volumes:
            - .:/var/www/api
        environment:
            # If you down want to use xDebug, set remote_enable=0
            XDEBUG_CONFIG: "remote_enable=1"
            PHP_IDE_CONFIG: "serverName=Docker"
            APP_ENV: local
            CONTAINER_ROLE: app
            CACHE_DRIVER: redis
            SESSION_DRIVER: file
            QUEUE_DRIVER: redis
            REDIS_HOST: redis
        depends_on:
            - postgres
            - redis
            - node

    # Scheduler container (schedule and queue runner)
    scheduler:
        image: nydronia-www
        build:
            context: docker/php
            dockerfile: Dockerfile
        volumes:
            - .:/var/www/api
        environment:
            APP_ENV: local
            CONTAINER_ROLE: scheduler
            CACHE_DRIVER: redis
            SESSION_DRIVER: file
            QUEUE_DRIVER: redis
            REDIS_HOST: redis
        depends_on:
            - php

    queue:
        image: nydronia-www
        build:
            context: docker/php
            dockerfile: Dockerfile
        volumes:
            - .:/var/www/api
        environment:
            APP_ENV: local
            CONTAINER_ROLE: queue
            CACHE_DRIVER: redis
            SESSION_DRIVER: file
            QUEUE_DRIVER: redis
            REDIS_HOST: redis
        depends_on:
            - php

    node:
        image: nydronia-node
        build:
            context: .
            dockerfile: docker/node/Dockerfile
        ports:
            - 3000:3000
        volumes:
            - ./node:/var/www/html/node
    # PostgreSQL database container
    postgres:
        build:
            context: docker/postgres
            dockerfile: Dockerfile
        volumes:
            # Database volume
            - database:/var/lib/postgresql/data
            # Temp volume to allow using dumps
            - ./docker/postgres/dumps/:/tmp/
        ports:
            - 54321:5432
        environment:
            - LC_ALL=C.UTF-8
            - POSTGRES_DB=nydronia
            - POSTGRES_USER=app
            - POSTGRES_PASSWORD=secret

    # Redis container
    redis:
        build:
            context: docker/redis
            dockerfile: Dockerfile
        volumes:
            - redis:/data
        ports:
            - 63791:6379

######### Volumes ###################################
volumes:
    database:
        driver: local
    redis:
        driver: local
